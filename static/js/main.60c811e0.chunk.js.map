{"version":3,"sources":["todo.js","App.js","index.js"],"names":["ToDo","useState","tasks","setTasks","newTask","setNewTask","error","setError","onSubmit","e","preventDefault","length","type","placeholder","value","onChange","target","style","color","map","task","index","onClick","newTasks","splice","handleDelete","updatedTask","handleUpdate","prompt","App","className","rootElement","document","getElementById","createRoot","render"],"mappings":"0KAiEeA,MA/Df,WACE,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAA8BF,mBAAS,IAAG,mBAAnCG,EAAO,KAAEC,EAAU,KAC1B,EAA0BJ,mBAAS,IAAG,mBAA/BK,EAAK,KAAEC,EAAQ,KA8BtB,OACE,gCACE,mCAAE,yBACF,uBAAMC,SA/BW,SAACC,GACpBA,EAAEC,kBACGN,GAAWA,EAAQO,OAAS,EAC/BJ,EAAS,8BAETJ,EAAS,GAAD,mBAAKD,GAAK,CAAEE,KACpBC,EAAW,IACXE,EAAS,IAEb,EAsBiC,UAC3B,uBACEK,KAAK,OACLC,YAAY,iBACZC,MAAOV,EACPW,SAAU,SAACN,GAAC,OAAKJ,EAAWI,EAAEO,OAAOF,MAAM,IAE7C,wBAAQF,KAAK,SAAQ,SAAC,WAEvBN,GAAS,mBAAGW,MAAO,CAAEC,MAAO,OAAQ,SAAEZ,IACvC,6BACGJ,EAAMiB,KAAI,SAACC,EAAMC,GAAK,OACrB,+BACGD,EACD,wBAAQE,QAAS,kBAlCN,SAACD,GACpB,IAAME,EAAQ,YAAOrB,GACrBqB,EAASC,OAAOH,EAAO,GACvBlB,EAASoB,EACX,CA8BiCE,CAAaJ,EAAM,EAAC,SAAC,WAC5C,wBACEC,QAAS,kBA9BA,SAACD,EAAOK,GAC3B,GAAKA,EAEE,CACL,IAAMH,EAAQ,YAAOrB,GACrBqB,EAASF,GAASK,EAClBvB,EAASoB,GACThB,EAAS,GACX,MANEA,EAAS,sBAOb,CAqB2BoB,CAAaN,EAAOO,OAAO,sBAAsB,EAAC,SAClE,aALMP,EAQJ,QAKf,EC5De,SAASQ,IACtB,OACE,qBAAKC,UAAU,MAAK,SAClB,cAAC,EAAI,KAGX,CCJA,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACN,EAAG,M","file":"static/js/main.60c811e0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ToDo() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!newTask || newTask.length < 3) {\r\n      setError(\"Please enter a valid task\");\r\n    } else {\r\n      setTasks([...tasks, newTask]);\r\n      setNewTask(\"\");\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const newTasks = [...tasks];\r\n    newTasks.splice(index, 1);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const handleUpdate = (index, updatedTask) => {\r\n    if (!updatedTask) {\r\n      setError(\"Please enter a task\");\r\n    } else {\r\n      const newTasks = [...tasks];\r\n      newTasks[index] = updatedTask;\r\n      setTasks(newTasks);\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <>With form validation</>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new task\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <ul>\r\n        {tasks.map((task, index) => (\r\n          <li key={index}>\r\n            {task}\r\n            <button onClick={() => handleDelete(index)}>Delete</button>\r\n            <button\r\n              onClick={() => handleUpdate(index, prompt(\"Enter updated task\"))}\r\n            >\r\n              Update\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import \"./styles.css\";\nimport ToDo from \"./todo\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ToDo />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}